@{
	ViewData["Title"] = "Index";
	var someStr = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.JSONaa);
}

@model DateRangeModel
@inject IJsonHelper Json  

<div class="text-center">
	<p></p>
</div>
<div id="chartdiv" style="height: 500px; width: 100%"></div>

@section Scripts
{
	<script type="text/javascript">
		$(function () {
			let startDate = document.getElementById("start-date");
			let endDate = document.getElementById("end-date");
			
			startDate.addEventListener("change", function () {
				endDate.setAttribute("min", this.value);
				$.ajax({
					url: 'Home/ChangeDate',
					data: { id: 0, date: this.value }
				}).done(function () {
					$.ajax({
						url: "Home/BuildTable",
						type: "GET"
					}).done(function (data) {
						chartMaker(JSON.parse(data.content.valuesTable), JSON.parse(data.content.orderInfo));
						//window.location.href = '@Url.Action("Index", "Home")';
                        document.getElementsByTagName('p')[0].textContent = `Elapsed data prep time: ${data.content.elapsedTime}ms`;
					});
				});
			});

			endDate.addEventListener("change", function () {
				startDate.setAttribute("max", this.value);
				$.ajax({
					url: 'Home/ChangeDate',
					data: { id: 1, date: this.value }
				}).done(function () {
					$.ajax({
						url: "Home/BuildTable",
						type: "GET"
					}).done(function (data) {
						chartMaker(JSON.parse(data.content.valuesTable), JSON.parse(data.content.orderInfo));
						//window.location.href = '@Url.Action("Index", "Home")';
						document.getElementsByTagName('p')[0].textContent = `Elapsed data prep time: ${data.content.elapsedTime}ms`;
					});
				});
			});

            startDate.dispatchEvent(new Event('change', { 'bubbles': true }));

			/**
			 * 
			 * @@param {Object} valuesTable
			 * @@param {Array.<string>} orderInfo
			 */
			function chartMaker(valuesTable, orderInfo) {
				am4core.ready(function () {
					am4core.useTheme(am4themes_animated);

					var chart = am4core.create("chartdiv", am4charts.XYChart);
					
					var data = [];

					var value = 50;
					for (let i = 0; i < Object.keys(valuesTable).length; i++) {
						let dataObj = {};
						let date = new Date(startDate.value);
						date.setDate(i + 1);

						dataObj["date"] = date;

						for (let j = 0; j < orderInfo.length; j++) {
							dataObj[orderInfo[j]] = valuesTable[date.toISOString().slice(0, 10)][j];
						}

						//console.log(dataObj);
						data.push(dataObj);
					}

					chart.data = data;

					var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
					dateAxis.renderer.minGridDistance = 60;

					var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());

					chart.legend = new am4charts.Legend();

					for (let i = 0; i < orderInfo.length; i++) {
						let series = chart.series.push(new am4charts.LineSeries());
						series.name = orderInfo[i];
						series.strokeWidth = 2;
						series.dataFields.valueY = orderInfo[i];
						series.dataFields.dateX = "date";
						series.tooltipText = `${orderInfo[i]}:\n[bold]{${orderInfo[i]}}[/]`;

						series.tooltip.pointerOrientation = "vertical";

						if (i === orderInfo.length - 1) {
							series.fillOpacity = 0.2;
							series.stroke = am4core.color('#00aa00');
							series.fill = am4core.color('#00ff00');
                        }
					}
					chart.cursor = new am4charts.XYCursor();
					//chart.cursor.snapToSeries = series;
					chart.cursor.xAxis = dateAxis;

					chart.scrollbarX = new am4core.Scrollbar();

					var range = dateAxis.axisRanges.create();
                    range.date = new Date(new Date().toISOString().slice(0, 10));
                    range.grid.stroke = am4core.color("#0000aa");
					range.grid.strokeWidth = 2;
					range.grid.strokeDasharray = '3,4';
					range.grid.strokeOpacity = 1;
					range.label.text = 'Today';
					range.label.paddingTop = 40;
					range.label.fill = am4core.color('#0000cc');
				});
			}
		})
	</script>
}
